import pytest
import os
import shutil
from bq_utils import (create_table_from_local,
                      upload_files_to_bucket,
                      create_table_from_bucket,
                      delete_files_from_bucket,
                      drop_table_in_bq,
                      download_file_from_bucket,
                      download_files_from_bucket)


class TestBqUtils:

    test_dir = os.path.abspath(os.path.dirname(__file__))

    @pytest.fixture
    def directory(self):
        os.makedirs(os.path.join(self.test_dir, 'google_cloud'), exist_ok=False)
        yield 'directory'
        shutil.rmtree(os.path.join(self.test_dir, 'google_cloud'), ignore_errors=True)

    @pytest.mark.skip(reason='TODO')
    def test_create_table_from_local_empty(self):
        create_table_from_local(table_id='test_subslurm_bq_functions',
                                project_id='subugoe-collaborative',
                                dataset_id='resources',
                                file_path='test_files_bigquery/crossref_sample.jsonl.gz',
                                schema_file_path='../schemas/schema_crossref.json',
                                source_format='jsonl',
                                write_disposition='WRITE_EMPTY',
                                table_description='Test Table generated by subslurm',
                                ignore_unknown_values=True)

    @pytest.mark.skip(reason='TODO')
    def test_create_table_from_local_append(self):
        create_table_from_local(table_id='test_subslurm_bq_functions',
                                project_id='subugoe-collaborative',
                                dataset_id='resources',
                                file_path='test_files_bigquery/*',
                                schema_file_path='../schemas/schema_crossref.json',
                                source_format='jsonl',
                                write_disposition='WRITE_APPEND',
                                table_description='Test Table generated by subslurm',
                                ignore_unknown_values=True)

    @pytest.mark.skip(reason='TODO')
    def test_upload_files_to_bucket(self):
        upload_files_to_bucket(bucket_name='bigschol',
                               file_path='test_files_bigquery/*',
                               gcb_dir='test')

    @pytest.mark.skip(reason='TODO')
    def test_create_table_from_bucket(self):
        create_table_from_bucket(uri='gs://bigschol/test/*',
                                 table_id='test_subslurm_bq_functions',
                                 project_id='subugoe-collaborative',
                                 dataset_id='resources',
                                 schema_file_path='../schemas/schema_crossref.json',
                                 source_format='jsonl',
                                 write_disposition='WRITE_APPEND',
                                 table_description='Test Table generated by subslurm',
                                 ignore_unknown_values=True)

    @pytest.mark.skip(reason='TODO')
    def test_download_file_from_bucket(self, directory):
        download_file_from_bucket(bucket_name='bigschol',
                                  gcb_dir='test/test_files_bigquery',
                                  file_path=os.path.join(self.test_dir, 'google_cloud'),
                                  file_name='crossref_sample.jsonl.gz')

    @pytest.mark.skip(reason='TODO')
    def test_download_files_from_bucket(self, directory):
        download_files_from_bucket(bucket_name='bigschol',
                                   gcb_dir='test/test_files_bigquery',
                                   file_path=os.path.join(self.test_dir, 'google_cloud'))

    @pytest.mark.skip(reason='TODO')
    def test_drop_table_in_bq(self):
        drop_table_in_bq(table_id='test_subslurm_bq_functions',
                         project_id='subugoe-collaborative',
                         dataset_id='resources')

    @pytest.mark.skip(reason='TODO')
    def test_delete_files_from_bucket(self):
        delete_files_from_bucket(bucket_name='bigschol',
                                 gcb_dir='test')
